# Generated by Django 2.2.1 on 2020-04-21 20:40

import authentication.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djchoices.choices


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('operation_manifest', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
        ('utilities', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=60, null=True, unique=True)),
                ('name', models.CharField(max_length=60)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('mobile', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('latest_otp', models.CharField(blank=True, max_length=6, null=True)),
                ('type', models.CharField(max_length=5)),
                ('age', models.CharField(max_length=5, null=True)),
                ('weight', models.CharField(max_length=5, null=True)),
                ('height', models.CharField(max_length=5, null=True)),
                ('gender', models.CharField(max_length=5, null=True)),
                ('activation_code', models.CharField(blank=True, max_length=200, null=True)),
                ('image_url', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fcm_token', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', authentication.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('type', models.CharField(choices=[('SCL', 'SCHOOL'), ('HTL', 'HOTEL'), ('CTC', 'CONSTRUCTION COMPANY'), ('OTH', 'OTHER')], max_length=4, validators=[djchoices.choices.ChoicesValidator({'CTC': 'CONSTRUCTION COMPANY', 'HTL': 'HOTEL', 'OTH': 'OTHER', 'SCL': 'SCHOOL'})])),
                ('pan', models.CharField(blank=True, max_length=128, null=True)),
                ('pan_image_url', models.CharField(blank=True, max_length=200, null=True)),
                ('gstin', models.CharField(blank=True, max_length=30, null=True)),
                ('secondary_mobile_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('accounts_mobile_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(regex='^\\d{10}$')])),
                ('accounts_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='organization_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('STF', 'STAFF'), ('OTH', 'OTHER')], max_length=5, validators=[djchoices.choices.ChoicesValidator({'OTH': 'OTHER', 'STF': 'STAFF'})])),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='OrganizationStaffMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.Organization')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.Staff')),
            ],
            options={
                'db_table': 'organization_staff_mapping',
                'unique_together': {('organization', 'staff')},
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='staff',
            field=models.ManyToManyField(blank=True, through='authentication.OrganizationStaffMapping', to='authentication.Staff'),
        ),
        migrations.CreateModel(
            name='KYCDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('identification_proof_type', models.CharField(choices=[('ADR', 'AADHAR'), ('PST', 'PASSPORT'), ('DLS', 'DRIVING LICENSE'), ('PAN', 'PAN CARD')], max_length=5, validators=[djchoices.choices.ChoicesValidator({'ADR': 'AADHAR', 'DLS': 'DRIVING LICENSE', 'PAN': 'PAN CARD', 'PST': 'PASSPORT'})])),
                ('unique_number', models.CharField(max_length=128)),
                ('front_image_url', models.CharField(blank=True, max_length=200, null=True)),
                ('back_image_url', models.CharField(blank=True, max_length=200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'kyc_document',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('place_id', models.CharField(blank=True, max_length=200)),
                ('geo_coordinates', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('pin_code', models.CharField(blank=True, max_length=10)),
                ('address', models.TextField(blank=True, max_length=300)),
                ('landmark', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=40)),
                ('address_type', models.CharField(choices=[('ASSET', 'ASSET'), ('OFC', 'OFFICE'), ('HOM', 'HOME'), ('OTH', 'OTHER')], default='OTH', max_length=5, validators=[djchoices.choices.ChoicesValidator({'ASSET': 'ASSET', 'HOM': 'HOME', 'OFC': 'OFFICE', 'OTH': 'OTHER'})])),
                ('contact_person_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_city', to='operation_manifest.City')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='utilities.Tag')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'address',
            },
        ),
    ]
